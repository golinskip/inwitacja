InvitationBundle\Entity\Event:
    type: entity
    table: null
    repositoryClass: InvitationBundle\Repository\EventRepository
    id:
        id:
            type: integer
            id: true
            generator:
                strategy: AUTO
    fields:
        name:
            type: string
            length: 255
        urlName:
            type: string
            length: 32
            unique: true
            column: url_name
        description:
            type: text
            nullable: true
        place:
            type: string
            length: 255
            nullable: true
        placeCoord:
            type: string
            length: 16
            nullable: true
            column: place_coord
        date:
            type: datetime
        createdAt:
            type: datetime
            column: created_at
        updatedAt:
            type: datetime
            column: updated_at
        domain:
            type: string
            length: 128
        status:
            type: integer
    lifecycleCallbacks:
        prePersist: [ fillEmptyFields ]
        postPersist: [ assignAsOwner ]
        preUpdate: [ beforeUpdate ]
    
    oneToMany:
        eventAggr:
            targetEntity: UserEventRoleEvent
            mappedBy: event
        personGroup:
            targetEntity: PersonGroup
            mappedBy: event
            cascade: ['persist', 'remove']
            orderBy: { 'innerOrder': 'ASC' }
        invitationGroup:
            targetEntity: InvitationGroup
            mappedBy: event
            cascade: ['persist', 'remove']
            orderBy: { 'innerOrder': 'ASC' }
        parameter:
            targetEntity: Parameter
            mappedBy: event
            cascade: ['persist', 'remove']
            orderBy: { 'innerOrder': 'ASC' }
        invitation:
            targetEntity: Invitation
            mappedBy: event
        news:
            targetEntity: News
            mappedBy: event
        message:
            targetEntity: Message
            mappedBy: event
    manyToOne:
        eventType:
            targetEntity: EventType
            inversedBy: event
            joinColumn:
                name: event_type_id
                referencedColumnName: id
        createdBy:
            targetEntity: AppBundle\Entity\User
            joinColumn:
                name: user_id
                referencedColumnName: id
